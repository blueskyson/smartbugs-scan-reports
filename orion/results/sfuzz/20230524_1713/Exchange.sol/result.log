Extract contract DocstringParsingError: from /sb/Exchange.sol
Extract contract Documentation from /sb/Exchange.sol
Extract contract tag from /sb/Exchange.sol
Extract contract @openzeppelin/contracts-ethereum-package from /sb/Exchange.sol
cp: cannot create regular file '/home/contracts/@openzeppelin/contracts-ethereum-package.sol': No such file or directory
Extract contract not from /sb/Exchange.sol
Extract contract valid from /sb/Exchange.sol
Extract contract for from /sb/Exchange.sol
Extract contract contracts. from /sb/Exchange.sol
Extract contract --> from /sb/Exchange.sol
Extract contract /sb/Exchange.sol:2038:1: from /sb/Exchange.sol
cp: cannot create regular file '/home/contracts//sb/Exchange.sol:2038:1:.sol': No such file or directory
Extract contract | from /sb/Exchange.sol
Extract contract 2038 from /sb/Exchange.sol
Extract contract | from /sb/Exchange.sol
Extract contract /bin from /sb/Exchange.sol
Extract contract /boot from /sb/Exchange.sol
Extract contract /dev from /sb/Exchange.sol
Extract contract /etc from /sb/Exchange.sol
Extract contract /home from /sb/Exchange.sol
Extract contract /lib from /sb/Exchange.sol
Extract contract /lib64 from /sb/Exchange.sol
Extract contract /media from /sb/Exchange.sol
Extract contract /mnt from /sb/Exchange.sol
Extract contract /opt from /sb/Exchange.sol
Extract contract /proc from /sb/Exchange.sol
Extract contract /root from /sb/Exchange.sol
Extract contract /run from /sb/Exchange.sol
Extract contract /sb from /sb/Exchange.sol
Extract contract /sbin from /sb/Exchange.sol
Extract contract /srv from /sb/Exchange.sol
Extract contract /sys from /sb/Exchange.sol
Extract contract /tmp from /sb/Exchange.sol
Extract contract /usr from /sb/Exchange.sol
Extract contract /var from /sb/Exchange.sol
Extract contract | from /sb/Exchange.sol
Extract contract ^ from /sb/Exchange.sol
Extract contract (Relevant from /sb/Exchange.sol
Extract contract source from /sb/Exchange.sol
Extract contract part from /sb/Exchange.sol
Extract contract starts from /sb/Exchange.sol
Extract contract here from /sb/Exchange.sol
Extract contract and from /sb/Exchange.sol
Extract contract spans from /sb/Exchange.sol
Extract contract across from /sb/Exchange.sol
Extract contract multiple from /sb/Exchange.sol
Extract contract lines). from /sb/Exchange.sol
Extracted 45 contract(s) from /sb/Exchange.sol
[0;32m> Created "fuzzMe"[0m
[0;32m> To fuzz contracts:[0m
  chmod +x fuzzMe
  ./fuzzMe
Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> contracts/usr.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> contracts/usr.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> contracts/usr.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/usr.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/usr.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/usr.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/usr.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/usr.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/usr.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/usr.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/usr.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> contracts/usr.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/usr.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> contracts/usr.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> contracts/usr.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> contracts/usr.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> contracts/usr.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/usr.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/usr.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> contracts/usr.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> contracts/usr.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> contracts/usr.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> contracts/usr.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/usr.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> contracts/usr.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> contracts/usr.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/usr.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> contracts/usr.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> contracts/usr.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/usr.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/usr.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/usr.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/usr.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/usr.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/usr.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/usr.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> contracts/usr.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> contracts/usr.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/usr.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> contracts/usr.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^

Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> contracts/mnt.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> contracts/mnt.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> contracts/mnt.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/mnt.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/mnt.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/mnt.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/mnt.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/mnt.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/mnt.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/mnt.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/mnt.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> contracts/mnt.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/mnt.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> contracts/mnt.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> contracts/mnt.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> contracts/mnt.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> contracts/mnt.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/mnt.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/mnt.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> contracts/mnt.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> contracts/mnt.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> contracts/mnt.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> contracts/mnt.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/mnt.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> contracts/mnt.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> contracts/mnt.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/mnt.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> contracts/mnt.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> contracts/mnt.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/mnt.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/mnt.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/mnt.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/mnt.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/mnt.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/mnt.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/mnt.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> contracts/mnt.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> contracts/mnt.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/mnt.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> contracts/mnt.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^

Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> contracts/for.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> contracts/for.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> contracts/for.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/for.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/for.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/for.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/for.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/for.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/for.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/for.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/for.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> contracts/for.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/for.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> contracts/for.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> contracts/for.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> contracts/for.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> contracts/for.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/for.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/for.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> contracts/for.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> contracts/for.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> contracts/for.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> contracts/for.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/for.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> contracts/for.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> contracts/for.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/for.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> contracts/for.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> contracts/for.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/for.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/for.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/for.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/for.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/for.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/for.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/for.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> contracts/for.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> contracts/for.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/for.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> contracts/for.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^

Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> contracts/starts.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> contracts/starts.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> contracts/starts.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/starts.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/starts.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/starts.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/starts.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/starts.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/starts.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/starts.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/starts.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> contracts/starts.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/starts.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> contracts/starts.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> contracts/starts.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> contracts/starts.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> contracts/starts.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/starts.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/starts.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> contracts/starts.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> contracts/starts.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> contracts/starts.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> contracts/starts.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/starts.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> contracts/starts.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> contracts/starts.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/starts.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> contracts/starts.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> contracts/starts.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/starts.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/starts.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/starts.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/starts.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/starts.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/starts.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/starts.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> contracts/starts.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> contracts/starts.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/starts.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> contracts/starts.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^

Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> contracts/multiple.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> contracts/multiple.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> contracts/multiple.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/multiple.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/multiple.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/multiple.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/multiple.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/multiple.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/multiple.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/multiple.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/multiple.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> contracts/multiple.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/multiple.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> contracts/multiple.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> contracts/multiple.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> contracts/multiple.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> contracts/multiple.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/multiple.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/multiple.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> contracts/multiple.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> contracts/multiple.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> contracts/multiple.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> contracts/multiple.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/multiple.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> contracts/multiple.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> contracts/multiple.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/multiple.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> contracts/multiple.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> contracts/multiple.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/multiple.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/multiple.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/multiple.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/multiple.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/multiple.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/multiple.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/multiple.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> contracts/multiple.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> contracts/multiple.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/multiple.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> contracts/multiple.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/--

Warning: Source file does not specify required compiler version! Consider adding "pragma solidity ^0.8.3;"
--> contracts/--

Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> contracts/source.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> contracts/source.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> contracts/source.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/source.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/source.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/source.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/source.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/source.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/source.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/source.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/source.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> contracts/source.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/source.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> contracts/source.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> contracts/source.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> contracts/source.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> contracts/source.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/source.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/source.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> contracts/source.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> contracts/source.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> contracts/source.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> contracts/source.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/source.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> contracts/source.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> contracts/source.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/source.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> contracts/source.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> contracts/source.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/source.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/source.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/source.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/source.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/source.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/source.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/source.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> contracts/source.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> contracts/source.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/source.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> contracts/source.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^

Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> contracts/lib64.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> contracts/lib64.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> contracts/lib64.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/lib64.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/lib64.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/lib64.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/lib64.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/lib64.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/lib64.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/lib64.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/lib64.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> contracts/lib64.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/lib64.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> contracts/lib64.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> contracts/lib64.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> contracts/lib64.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> contracts/lib64.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/lib64.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/lib64.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> contracts/lib64.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> contracts/lib64.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> contracts/lib64.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> contracts/lib64.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/lib64.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> contracts/lib64.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> contracts/lib64.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/lib64.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> contracts/lib64.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> contracts/lib64.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/lib64.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/lib64.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/lib64.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/lib64.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/lib64.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/lib64.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/lib64.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> contracts/lib64.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> contracts/lib64.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/lib64.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> contracts/lib64.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^

Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> contracts/tag.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> contracts/tag.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> contracts/tag.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/tag.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/tag.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/tag.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/tag.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/tag.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/tag.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/tag.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/tag.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> contracts/tag.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/tag.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> contracts/tag.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> contracts/tag.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> contracts/tag.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> contracts/tag.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/tag.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/tag.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> contracts/tag.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> contracts/tag.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> contracts/tag.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> contracts/tag.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/tag.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> contracts/tag.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> contracts/tag.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/tag.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> contracts/tag.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> contracts/tag.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/tag.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/tag.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/tag.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/tag.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/tag.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/tag.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/tag.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> contracts/tag.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> contracts/tag.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/tag.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> contracts/tag.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^

Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> contracts/home.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> contracts/home.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> contracts/home.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/home.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/home.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/home.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/home.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/home.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/home.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/home.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/home.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> contracts/home.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/home.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> contracts/home.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> contracts/home.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> contracts/home.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> contracts/home.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/home.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/home.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> contracts/home.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> contracts/home.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> contracts/home.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> contracts/home.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/home.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> contracts/home.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> contracts/home.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/home.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> contracts/home.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> contracts/home.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/home.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/home.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/home.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/home.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/home.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/home.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/home.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> contracts/home.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> contracts/home.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/home.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> contracts/home.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^

Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> contracts/spans.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> contracts/spans.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> contracts/spans.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/spans.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/spans.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/spans.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/spans.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/spans.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/spans.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/spans.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/spans.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> contracts/spans.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/spans.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> contracts/spans.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> contracts/spans.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> contracts/spans.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> contracts/spans.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/spans.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/spans.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> contracts/spans.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> contracts/spans.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> contracts/spans.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> contracts/spans.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/spans.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> contracts/spans.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> contracts/spans.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/spans.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> contracts/spans.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> contracts/spans.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/spans.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/spans.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/spans.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/spans.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/spans.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/spans.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/spans.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> contracts/spans.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> contracts/spans.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/spans.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> contracts/spans.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^

Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> contracts/etc.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> contracts/etc.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> contracts/etc.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/etc.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/etc.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/etc.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/etc.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/etc.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/etc.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/etc.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/etc.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> contracts/etc.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/etc.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> contracts/etc.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> contracts/etc.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> contracts/etc.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> contracts/etc.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/etc.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/etc.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> contracts/etc.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> contracts/etc.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> contracts/etc.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> contracts/etc.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/etc.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> contracts/etc.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> contracts/etc.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/etc.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> contracts/etc.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> contracts/etc.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/etc.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/etc.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/etc.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/etc.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/etc.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/etc.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/etc.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> contracts/etc.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> contracts/etc.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/etc.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> contracts/etc.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^

Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> contracts/part.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> contracts/part.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> contracts/part.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/part.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/part.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/part.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/part.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/part.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/part.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/part.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/part.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> contracts/part.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/part.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> contracts/part.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> contracts/part.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> contracts/part.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> contracts/part.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/part.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/part.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> contracts/part.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> contracts/part.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> contracts/part.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> contracts/part.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/part.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> contracts/part.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> contracts/part.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/part.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> contracts/part.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> contracts/part.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/part.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/part.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/part.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/part.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/part.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/part.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/part.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> contracts/part.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> contracts/part.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/part.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> contracts/part.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^

Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> contracts/lib.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> contracts/lib.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> contracts/lib.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/lib.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/lib.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/lib.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/lib.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/lib.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/lib.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/lib.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/lib.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> contracts/lib.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/lib.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> contracts/lib.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> contracts/lib.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> contracts/lib.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> contracts/lib.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/lib.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/lib.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> contracts/lib.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> contracts/lib.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> contracts/lib.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> contracts/lib.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/lib.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> contracts/lib.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> contracts/lib.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/lib.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> contracts/lib.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> contracts/lib.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/lib.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/lib.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/lib.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/lib.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/lib.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/lib.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/lib.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> contracts/lib.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> contracts/lib.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/lib.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> contracts/lib.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^

Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> contracts/run.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> contracts/run.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> contracts/run.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/run.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/run.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/run.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/run.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/run.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/run.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/run.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/run.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> contracts/run.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/run.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> contracts/run.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> contracts/run.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> contracts/run.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> contracts/run.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/run.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/run.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> contracts/run.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> contracts/run.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> contracts/run.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> contracts/run.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/run.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> contracts/run.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> contracts/run.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/run.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> contracts/run.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> contracts/run.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/run.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/run.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/run.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/run.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/run.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/run.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/run.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> contracts/run.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> contracts/run.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/run.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> contracts/run.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^

Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> contracts/media.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> contracts/media.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> contracts/media.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/media.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/media.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/media.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/media.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/media.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/media.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/media.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/media.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> contracts/media.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/media.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> contracts/media.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> contracts/media.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> contracts/media.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> contracts/media.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/media.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/media.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> contracts/media.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> contracts/media.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> contracts/media.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> contracts/media.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/media.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> contracts/media.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> contracts/media.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/media.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> contracts/media.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> contracts/media.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/media.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/media.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/media.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/media.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/media.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/media.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/media.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> contracts/media.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> contracts/media.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/media.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> contracts/media.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^

Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> contracts/here.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> contracts/here.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> contracts/here.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/here.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/here.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/here.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/here.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/here.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/here.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/here.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/here.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> contracts/here.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/here.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> contracts/here.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> contracts/here.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> contracts/here.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> contracts/here.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/here.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/here.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> contracts/here.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> contracts/here.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> contracts/here.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> contracts/here.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/here.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> contracts/here.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> contracts/here.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/here.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> contracts/here.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> contracts/here.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/here.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/here.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/here.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/here.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/here.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/here.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/here.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> contracts/here.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> contracts/here.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/here.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> contracts/here.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^

Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> contracts/tmp.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> contracts/tmp.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> contracts/tmp.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/tmp.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/tmp.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/tmp.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/tmp.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/tmp.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/tmp.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/tmp.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/tmp.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> contracts/tmp.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/tmp.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> contracts/tmp.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> contracts/tmp.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> contracts/tmp.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> contracts/tmp.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/tmp.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/tmp.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> contracts/tmp.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> contracts/tmp.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> contracts/tmp.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> contracts/tmp.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/tmp.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> contracts/tmp.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> contracts/tmp.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/tmp.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> contracts/tmp.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> contracts/tmp.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/tmp.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/tmp.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/tmp.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/tmp.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/tmp.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/tmp.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/tmp.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> contracts/tmp.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> contracts/tmp.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/tmp.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> contracts/tmp.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^

Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> contracts/sbin.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> contracts/sbin.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> contracts/sbin.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/sbin.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/sbin.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/sbin.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> contracts/sbin.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/sbin.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> contracts/sbin.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/sbin.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/sbin.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> contracts/sbin.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/sbin.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> contracts/sbin.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> contracts/sbin.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> contracts/sbin.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> contracts/sbin.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/sbin.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> contracts/sbin.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> contracts/sbin.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> contracts/sbin.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> contracts/sbin.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> contracts/sbin.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/sbin.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> contracts/sbin.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> contracts/sbin.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> contracts/sbin.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> contracts/sbin.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> contracts/sbin.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/sbin.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/sbin.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/sbin.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/sbin.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> contracts/sbin.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/sbin.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> contracts/sbin.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> contracts/sbin.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> contracts/sbin.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> contracts/sbin.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> contracts/sbin.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^

./fuzzMe: line 21: syntax error near unexpected token `('
./fuzzMe: line 21: `solc --combined-json abi,bin,bin-runtime,srcmap,srcmap-runtime contracts/(Relevant.sol > contracts/(Relevant.sol.json'

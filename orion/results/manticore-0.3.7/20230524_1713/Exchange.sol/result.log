2023-05-24 17:13:49,424: [11] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:49,425: [11] m.main:INFO: Beginning analysis
2023-05-24 17:13:49,427: [11] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:49,464: [11] m.e.manticore:INFO: Failed to build contract DocstringParsingError: Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:49,532: [11] m.c.manticore:INFO: Results in /mcore_g14z_x80
2023-05-24 17:13:49,533: [11] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:50,150: [36] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:50,150: [36] m.main:INFO: Beginning analysis
2023-05-24 17:13:50,152: [36] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:50,177: [36] m.e.manticore:INFO: Failed to build contract Documentation Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:50,214: [36] m.c.manticore:INFO: Results in /mcore_clmy29nb
2023-05-24 17:13:50,215: [36] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:50,570: [61] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:50,570: [61] m.main:INFO: Beginning analysis
2023-05-24 17:13:50,572: [61] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:50,591: [61] m.e.manticore:INFO: Failed to build contract tag Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:50,632: [61] m.c.manticore:INFO: Results in /mcore_mepdnvlb
2023-05-24 17:13:50,632: [61] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:50,992: [86] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:50,992: [86] m.main:INFO: Beginning analysis
2023-05-24 17:13:50,994: [86] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:51,015: [86] m.e.manticore:INFO: Failed to build contract @openzeppelin/contracts-ethereum-package Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:51,051: [86] m.c.manticore:INFO: Results in /mcore_l80ag64i
2023-05-24 17:13:51,051: [86] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:51,502: [111] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:51,502: [111] m.main:INFO: Beginning analysis
2023-05-24 17:13:51,504: [111] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:51,546: [111] m.e.manticore:INFO: Failed to build contract not Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:51,599: [111] m.c.manticore:INFO: Results in /mcore_7m094931
2023-05-24 17:13:51,599: [111] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:52,261: [136] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:52,262: [136] m.main:INFO: Beginning analysis
2023-05-24 17:13:52,265: [136] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:52,323: [136] m.e.manticore:INFO: Failed to build contract valid Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:52,411: [136] m.c.manticore:INFO: Results in /mcore_nz3ita02
2023-05-24 17:13:52,411: [136] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:53,010: [161] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:53,010: [161] m.main:INFO: Beginning analysis
2023-05-24 17:13:53,013: [161] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:53,059: [161] m.e.manticore:INFO: Failed to build contract for Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:53,102: [161] m.c.manticore:INFO: Results in /mcore_qmp2l4u6
2023-05-24 17:13:53,103: [161] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:53,513: [186] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:53,513: [186] m.main:INFO: Beginning analysis
2023-05-24 17:13:53,514: [186] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:53,539: [186] m.e.manticore:INFO: Failed to build contract contracts. Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:53,574: [186] m.c.manticore:INFO: Results in /mcore_faghfeax
2023-05-24 17:13:53,575: [186] m.c.manticore:WARNING: Manticore failed to run
usage: manticore [-h] [--compile-force-framework COMPILE_FORCE_FRAMEWORK]
                 [--compile-remove-metadata]
                 [--compile-custom-build COMPILE_CUSTOM_BUILD]
                 [--ignore-compile] [--solc SOLC] [--solc-remaps SOLC_REMAPS]
                 [--solc-args SOLC_ARGS] [--solc-disable-warnings]
                 [--solc-working-dir SOLC_WORKING_DIR]
                 [--solc-solcs-select SOLC_SOLCS_SELECT]
                 [--solc-solcs-bin SOLC_SOLCS_BIN] [--solc-standard-json]
                 [--solc-force-legacy-json] [--truffle-ignore-compile]
                 [--truffle-build-directory TRUFFLE_BUILD_DIRECTORY]
                 [--truffle-version TRUFFLE_VERSION]
                 [--truffle-overwrite-config]
                 [--truffle-overwrite-version TRUFFLE_OVERWRITE_VERSION]
                 [--embark-ignore-compile] [--embark-overwrite-config]
                 [--dapp-ignore-compile] [--etherlime-ignore-compile]
                 [--etherlime-compile-arguments]
                 [--etherscan-only-source-code] [--etherscan-only-bytecode]
                 [--etherscan-apikey ETHERSCAN_API_KEY]
                 [--arbiscan-apikey ARBISCAN_API_KEY]
                 [--polygonscan-apikey POLYGONSCAN_API_KEY]
                 [--avax-apikey AVAX_API_KEY]
                 [--ftmscan-apikey FTMSCAN_API_KEY]
                 [--bscan-apikey BSCAN_API_KEY]
                 [--etherscan-export-directory ETHERSCAN_EXPORT_DIR]
                 [--waffle-ignore-compile]
                 [--waffle-config-file WAFFLE_CONFIG_FILE] [--npx-disable]
                 [--buidler-ignore-compile]
                 [--buidler-cache-directory BUIDLER_CACHE_DIRECTORY]
                 [--buidler-skip-directory-name-fix]
                 [--hardhat-ignore-compile]
                 [--hardhat-cache-directory HARDHAT_CACHE_DIRECTORY]
                 [--hardhat-artifacts-directory HARDHAT_ARTIFACTS_DIRECTORY]
                 [--coverage COVERAGE] [--no-colors] [--policy POLICY] [-v]
                 [--workspace WORKSPACE] [--version] [--config CONFIG]
                 [--entrysymbol ENTRYSYMBOL] [--data DATA] [--file FILES]
                 [--env ENV] [--pure-symbolic] [--verbose-trace]
                 [--txlimit TXLIMIT] [--txnocoverage] [--txnoether]
                 [--txaccount TXACCOUNT] [--txpreconstrain]
                 [--contract CONTRACT] [--list-detectors]
                 [--exclude DETECTORS_TO_EXCLUDE] [--exclude-all]
                 [--avoid-constant] [--limit-loops] [--no-testcases]
                 [--only-alive-testcases] [--thorough-mode]
                 [--core.compress_states CORE.COMPRESS_STATES]
                 [--core.execs_per_intermittent_cb CORE.EXECS_PER_INTERMITTENT_CB]
                 [--core.HOST CORE.HOST] [--core.PORT CORE.PORT]
                 [--core.fast_fail CORE.FAST_FAIL]
                 [--core.timeout CORE.TIMEOUT] [--core.cluster CORE.CLUSTER]
                 [--core.procs CORE.PROCS]
                 [--core.mprocessing CORE.MPROCESSING] [--core.seed CORE.SEED]
                 [--smt.timeout SMT.TIMEOUT] [--smt.memory SMT.MEMORY]
                 [--smt.maxsolutions SMT.MAXSOLUTIONS]
                 [--smt.z3_bin SMT.Z3_BIN] [--smt.cvc4_bin SMT.CVC4_BIN]
                 [--smt.yices_bin SMT.YICES_BIN]
                 [--smt.boolector_bin SMT.BOOLECTOR_BIN]
                 [--smt.defaultunsat SMT.DEFAULTUNSAT]
                 [--smt.optimize SMT.OPTIMIZE] [--smt.solver SMT.SOLVER]
                 [--workspace.prefix WORKSPACE.PREFIX]
                 [--workspace.dir WORKSPACE.DIR] [--evm.oog EVM.OOG]
                 [--evm.txfail EVM.TXFAIL]
                 [--evm.calldata_max_offset EVM.CALLDATA_MAX_OFFSET]
                 [--evm.calldata_max_size EVM.CALLDATA_MAX_SIZE]
                 [--evm.ignore_balance EVM.IGNORE_BALANCE]
                 [--evm.defaultgas EVM.DEFAULTGAS] [--evm.sha3 EVM.SHA3]
                 [--evm.sha3timeout EVM.SHA3TIMEOUT] [--evm.events EVM.EVENTS]
                 [--cli.profile CLI.PROFILE]
                 [--cli.explore_balance CLI.EXPLORE_BALANCE]
                 [--cli.skip_reverts CLI.SKIP_REVERTS]
                 [--cli.target_func CLI.TARGET_FUNC]
                 [--wasm.decode_names WASM.DECODE_NAMES]
                 [--main.recursionlimit MAIN.RECURSIONLIMIT]
                 [--native.fast_crash NATIVE.FAST_CRASH]
                 [--native.stdin_size NATIVE.STDIN_SIZE]
                 [argv [argv ...]]
manticore: error: argument --contract: expected one argument
mv: cannot stat '/mcore_*': No such file or directory
2023-05-24 17:13:54,202: [215] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:54,202: [215] m.main:INFO: Beginning analysis
2023-05-24 17:13:54,203: [215] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:54,220: [215] m.e.manticore:INFO: Failed to build contract /sb/Exchange.sol:2038:1: Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:54,247: [215] m.c.manticore:INFO: Results in /mcore_myr7d7b8
2023-05-24 17:13:54,247: [215] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:54,506: [240] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:54,506: [240] m.main:INFO: Beginning analysis
2023-05-24 17:13:54,507: [240] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:54,525: [240] m.e.manticore:INFO: Failed to build contract | Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:54,552: [240] m.c.manticore:INFO: Results in /mcore_0dy60n40
2023-05-24 17:13:54,552: [240] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:54,817: [265] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:54,817: [265] m.main:INFO: Beginning analysis
2023-05-24 17:13:54,818: [265] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:54,835: [265] m.e.manticore:INFO: Failed to build contract 2038 Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:54,864: [265] m.c.manticore:INFO: Results in /mcore_yyw7ieo_
2023-05-24 17:13:54,865: [265] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:55,128: [290] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:55,129: [290] m.main:INFO: Beginning analysis
2023-05-24 17:13:55,130: [290] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:55,146: [290] m.e.manticore:INFO: Failed to build contract | Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:55,172: [290] m.c.manticore:INFO: Results in /mcore_h99w762b
2023-05-24 17:13:55,172: [290] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:55,438: [315] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:55,438: [315] m.main:INFO: Beginning analysis
2023-05-24 17:13:55,439: [315] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:55,458: [315] m.e.manticore:INFO: Failed to build contract /analyzeBytecode.py Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:55,483: [315] m.c.manticore:INFO: Results in /mcore_6r_ivwv7
2023-05-24 17:13:55,483: [315] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:55,749: [340] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:55,749: [340] m.main:INFO: Beginning analysis
2023-05-24 17:13:55,750: [340] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:55,766: [340] m.e.manticore:INFO: Failed to build contract /bin Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:55,794: [340] m.c.manticore:INFO: Results in /mcore_1nh9d8wy
2023-05-24 17:13:55,795: [340] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:56,046: [365] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:56,046: [365] m.main:INFO: Beginning analysis
2023-05-24 17:13:56,048: [365] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:56,065: [365] m.e.manticore:INFO: Failed to build contract /boot Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:56,092: [365] m.c.manticore:INFO: Results in /mcore_q3uz554d
2023-05-24 17:13:56,093: [365] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:56,351: [390] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:56,351: [390] m.main:INFO: Beginning analysis
2023-05-24 17:13:56,353: [390] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:56,368: [390] m.e.manticore:INFO: Failed to build contract /dev Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:56,393: [390] m.c.manticore:INFO: Results in /mcore_9rbcp0pf
2023-05-24 17:13:56,393: [390] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:56,647: [415] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:56,647: [415] m.main:INFO: Beginning analysis
2023-05-24 17:13:56,648: [415] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:56,665: [415] m.e.manticore:INFO: Failed to build contract /etc Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:56,695: [415] m.c.manticore:INFO: Results in /mcore_khqcrqy1
2023-05-24 17:13:56,695: [415] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:56,956: [440] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:56,957: [440] m.main:INFO: Beginning analysis
2023-05-24 17:13:56,958: [440] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:56,977: [440] m.e.manticore:INFO: Failed to build contract /home Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:57,010: [440] m.c.manticore:INFO: Results in /mcore_aadj9lp6
2023-05-24 17:13:57,010: [440] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:57,283: [465] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:57,283: [465] m.main:INFO: Beginning analysis
2023-05-24 17:13:57,284: [465] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:57,301: [465] m.e.manticore:INFO: Failed to build contract /lib Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-4:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:57,329: [465] m.c.manticore:INFO: Results in /mcore_rnpleg50
2023-05-24 17:13:57,330: [465] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:57,595: [490] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:57,595: [490] m.main:INFO: Beginning analysis
2023-05-24 17:13:57,596: [490] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:57,612: [490] m.e.manticore:INFO: Failed to build contract /lib64 Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-2:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:57,638: [490] m.c.manticore:INFO: Results in /mcore_vpr4cysz
2023-05-24 17:13:57,638: [490] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:57,897: [515] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:57,897: [515] m.main:INFO: Beginning analysis
2023-05-24 17:13:57,898: [515] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:57,915: [515] m.e.manticore:INFO: Failed to build contract /media Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:57,942: [515] m.c.manticore:INFO: Results in /mcore_wjm31xcu
2023-05-24 17:13:57,942: [515] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:58,238: [540] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:58,238: [540] m.main:INFO: Beginning analysis
2023-05-24 17:13:58,239: [540] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:58,256: [540] m.e.manticore:INFO: Failed to build contract /mnt Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:58,285: [540] m.c.manticore:INFO: Results in /mcore_tu8sqdw0
2023-05-24 17:13:58,286: [540] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:58,563: [565] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:58,563: [565] m.main:INFO: Beginning analysis
2023-05-24 17:13:58,564: [565] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:58,582: [565] m.e.manticore:INFO: Failed to build contract /opt Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:58,609: [565] m.c.manticore:INFO: Results in /mcore_uum_8n_d
2023-05-24 17:13:58,610: [565] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:58,870: [590] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:58,871: [590] m.main:INFO: Beginning analysis
2023-05-24 17:13:58,872: [590] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:58,888: [590] m.e.manticore:INFO: Failed to build contract /printContractNames.py Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:58,917: [590] m.c.manticore:INFO: Results in /mcore_u8ztagil
2023-05-24 17:13:58,918: [590] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:59,180: [615] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:59,180: [615] m.main:INFO: Beginning analysis
2023-05-24 17:13:59,182: [615] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:59,199: [615] m.e.manticore:INFO: Failed to build contract /proc Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:59,227: [615] m.c.manticore:INFO: Results in /mcore_xue7r32f
2023-05-24 17:13:59,228: [615] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:59,495: [640] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:59,495: [640] m.main:INFO: Beginning analysis
2023-05-24 17:13:59,496: [640] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:59,517: [640] m.e.manticore:INFO: Failed to build contract /results Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:59,552: [640] m.c.manticore:INFO: Results in /mcore_n_lqtmv_
2023-05-24 17:13:59,552: [640] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:13:59,824: [665] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:13:59,824: [665] m.main:INFO: Beginning analysis
2023-05-24 17:13:59,825: [665] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:13:59,842: [665] m.e.manticore:INFO: Failed to build contract /root Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:13:59,869: [665] m.c.manticore:INFO: Results in /mcore_lmbtzhni
2023-05-24 17:13:59,869: [665] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:00,132: [690] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:00,132: [690] m.main:INFO: Beginning analysis
2023-05-24 17:14:00,134: [690] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:00,152: [690] m.e.manticore:INFO: Failed to build contract /run Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:00,188: [690] m.c.manticore:INFO: Results in /mcore_lwljecgn
2023-05-24 17:14:00,188: [690] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:00,457: [715] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:00,458: [715] m.main:INFO: Beginning analysis
2023-05-24 17:14:00,459: [715] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:00,475: [715] m.e.manticore:INFO: Failed to build contract /runManticore.sh Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:00,501: [715] m.c.manticore:INFO: Results in /mcore_9fj5iuw5
2023-05-24 17:14:00,502: [715] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:00,769: [740] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:00,769: [740] m.main:INFO: Beginning analysis
2023-05-24 17:14:00,770: [740] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:00,789: [740] m.e.manticore:INFO: Failed to build contract /sb Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:00,819: [740] m.c.manticore:INFO: Results in /mcore_eo9w131j
2023-05-24 17:14:00,819: [740] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:01,105: [765] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:01,105: [765] m.main:INFO: Beginning analysis
2023-05-24 17:14:01,106: [765] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:01,125: [765] m.e.manticore:INFO: Failed to build contract /sbin Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:01,157: [765] m.c.manticore:INFO: Results in /mcore_kp3i81dn
2023-05-24 17:14:01,158: [765] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:01,456: [790] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:01,456: [790] m.main:INFO: Beginning analysis
2023-05-24 17:14:01,457: [790] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:01,475: [790] m.e.manticore:INFO: Failed to build contract /srv Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:01,502: [790] m.c.manticore:INFO: Results in /mcore_pqizav7e
2023-05-24 17:14:01,502: [790] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:01,756: [815] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:01,756: [815] m.main:INFO: Beginning analysis
2023-05-24 17:14:01,757: [815] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:01,774: [815] m.e.manticore:INFO: Failed to build contract /sys Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:01,806: [815] m.c.manticore:INFO: Results in /mcore_st5mj3o4
2023-05-24 17:14:01,806: [815] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:02,100: [840] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:02,100: [840] m.main:INFO: Beginning analysis
2023-05-24 17:14:02,102: [840] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:02,119: [840] m.e.manticore:INFO: Failed to build contract /tmp Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:02,146: [840] m.c.manticore:INFO: Results in /mcore_x03w9tq6
2023-05-24 17:14:02,146: [840] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:02,415: [865] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:02,415: [865] m.main:INFO: Beginning analysis
2023-05-24 17:14:02,416: [865] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:02,434: [865] m.e.manticore:INFO: Failed to build contract /usr Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:02,465: [865] m.c.manticore:INFO: Results in /mcore_kj2qvsat
2023-05-24 17:14:02,466: [865] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:02,733: [890] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:02,733: [890] m.main:INFO: Beginning analysis
2023-05-24 17:14:02,734: [890] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:02,751: [890] m.e.manticore:INFO: Failed to build contract /var Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:02,777: [890] m.c.manticore:INFO: Results in /mcore_dl_j1ya0
2023-05-24 17:14:02,778: [890] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:03,047: [915] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:03,047: [915] m.main:INFO: Beginning analysis
2023-05-24 17:14:03,049: [915] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:03,068: [915] m.e.manticore:INFO: Failed to build contract | Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:03,096: [915] m.c.manticore:INFO: Results in /mcore_2qhyi5nq
2023-05-24 17:14:03,096: [915] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:03,352: [940] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:03,352: [940] m.main:INFO: Beginning analysis
2023-05-24 17:14:03,353: [940] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:03,369: [940] m.e.manticore:INFO: Failed to build contract ^ Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:03,395: [940] m.c.manticore:INFO: Results in /mcore_ory1nxgm
2023-05-24 17:14:03,395: [940] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:03,649: [965] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:03,649: [965] m.main:INFO: Beginning analysis
2023-05-24 17:14:03,650: [965] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:03,667: [965] m.e.manticore:INFO: Failed to build contract (Relevant Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-2:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:03,697: [965] m.c.manticore:INFO: Results in /mcore_7wzau8za
2023-05-24 17:14:03,697: [965] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:03,950: [990] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:03,950: [990] m.main:INFO: Beginning analysis
2023-05-24 17:14:03,951: [990] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:03,968: [990] m.e.manticore:INFO: Failed to build contract source Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:03,994: [990] m.c.manticore:INFO: Results in /mcore_jgh3l6d3
2023-05-24 17:14:03,994: [990] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:04,250: [1015] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:04,250: [1015] m.main:INFO: Beginning analysis
2023-05-24 17:14:04,251: [1015] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:04,267: [1015] m.e.manticore:INFO: Failed to build contract part Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:04,295: [1015] m.c.manticore:INFO: Results in /mcore_9iugc8s4
2023-05-24 17:14:04,295: [1015] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:04,555: [1040] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:04,555: [1040] m.main:INFO: Beginning analysis
2023-05-24 17:14:04,556: [1040] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:04,573: [1040] m.e.manticore:INFO: Failed to build contract starts Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:04,600: [1040] m.c.manticore:INFO: Results in /mcore_dlm0z3lw
2023-05-24 17:14:04,600: [1040] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:04,892: [1065] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:04,892: [1065] m.main:INFO: Beginning analysis
2023-05-24 17:14:04,893: [1065] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:04,909: [1065] m.e.manticore:INFO: Failed to build contract here Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:04,936: [1065] m.c.manticore:INFO: Results in /mcore_l8nts49m
2023-05-24 17:14:04,936: [1065] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:05,202: [1090] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:05,202: [1090] m.main:INFO: Beginning analysis
2023-05-24 17:14:05,203: [1090] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:05,220: [1090] m.e.manticore:INFO: Failed to build contract and Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:05,247: [1090] m.c.manticore:INFO: Results in /mcore_f01sm3fh
2023-05-24 17:14:05,247: [1090] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:05,505: [1115] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:05,506: [1115] m.main:INFO: Beginning analysis
2023-05-24 17:14:05,507: [1115] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:05,525: [1115] m.e.manticore:INFO: Failed to build contract spans Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-2:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:05,555: [1115] m.c.manticore:INFO: Results in /mcore_f3p3ksks
2023-05-24 17:14:05,555: [1115] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:05,816: [1140] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:05,816: [1140] m.main:INFO: Beginning analysis
2023-05-24 17:14:05,817: [1140] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:05,833: [1140] m.e.manticore:INFO: Failed to build contract across Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:05,862: [1140] m.c.manticore:INFO: Results in /mcore_bhdu_uy0
2023-05-24 17:14:05,862: [1140] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:06,121: [1165] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:06,121: [1165] m.main:INFO: Beginning analysis
2023-05-24 17:14:06,122: [1165] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:06,138: [1165] m.e.manticore:INFO: Failed to build contract multiple Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:06,163: [1165] m.c.manticore:INFO: Results in /mcore_hv99gc1t
2023-05-24 17:14:06,164: [1165] m.c.manticore:WARNING: Manticore failed to run
2023-05-24 17:14:06,414: [1190] m.main:INFO: Registered plugins: IntrospectionAPIPlugin, <class 'manticore.ethereum.plugins.SkipRevertBasicBlocks'>, <class 'manticore.ethereum.plugins.FilterFunctions'>
2023-05-24 17:14:06,414: [1190] m.main:INFO: Beginning analysis
2023-05-24 17:14:06,416: [1190] m.e.manticore:INFO: Starting symbolic create contract
2023-05-24 17:14:06,432: [1190] m.e.manticore:INFO: Failed to build contract lines). Errors : Invalid solc compilation Error: Documentation tag @openzeppelin/contracts-ethereum-package not valid for contracts.
    --> sb/Exchange.sol:2038:1:
     |
2038 | /**
     | ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
   --> sb/Exchange.sol:749:16:
    |
749 |         return msg.sender;
    |                ^^^^^^^^^^

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> sb/Exchange.sol:804:5:
    |
804 |     constructor(string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1135:26:
     |
1135 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1136:21:
     |
1136 |         baseValue = int112(result);
     |                     ^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:1156:26:
     |
1156 |         require(result < uint256(type(int112).max), "E3U");
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int112".
    --> sb/Exchange.sol:1157:24:
     |
1157 |         decimalValue = int112(result);
     |                        ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:34:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                  ^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint8
    --> sb/Exchange.sol:1549:49:
     |
1549 |         c = int192((a > 65536) ? (a / d) * b : (a * b) / d);
     |                                                 ^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1604:35:
     |
1604 |             int256 _assetValue = (int256(balance) * price) / 1e8;
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1660:45:
     |
1660 |             int192 liabilityValue = int192((int256(balance) * price) / 1e8);
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int192".
    --> sb/Exchange.sol:1717:13:
     |
1717 |             int192(lockedAmount),
     |             ^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:1721:9:
     |
1721 |         totalPosition += lockedAmount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator >= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1824:17:
     |
1824 |         require(assetBalances[liquidator][redeemedAsset] >= amount, "E8");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint112
    --> sb/Exchange.sol:1826:9:
     |
1826 |         assetBalances[liquidator][redeemedAsset] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint112
    --> sb/Exchange.sol:1827:9:
     |
1827 |         assetBalances[constants.user][redeemedAsset] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "enum MarginalFunctionality.PositionState" to "int256".
    --> sb/Exchange.sol:1860:13:
     |
1860 |             int(finalPosition.state) < 3 && //POSITIVE,NEGATIVE or OVERDUE
     |             ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^

Error: Operator * not compatible with types int256 and uint64
    --> sb/Exchange.sol:1885:39:
     |
1885 |         int192 _orionAmount = int192((int256(amount) * price) / 1e8);
     |                                       ^^^^^^^^^^^^^^^^^^^^^^

Error: True expression's type tuple(int64,int64) does not match false expression's type tuple(uint8,int64).
    --> sb/Exchange.sol:1893:15:
     |
1893 |             : (onBalanceOrion > 0)
     |               ^ (Relevant source part starts here and spans across multiple lines).

Error: True expression's type tuple(int64,uint8) does not match false expression's type tuple(int64,int64).
    --> sb/Exchange.sol:1891:48:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |                                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Type uint8 is not implicitly convertible to expected type int64.
    --> sb/Exchange.sol:1891:9:
     |
1891 |         (int64 fromBalance, int64 fromStake) = (onBalanceOrion > orionAmount)
     |         ^ (Relevant source part starts here and spans across multiple lines).

Error: Return argument type address is not implicitly convertible to expected type (type of first return variable) address payable.
    --> sb/Exchange.sol:2062:16:
     |
2062 |         return msg.sender;
     |                ^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2278:13:
     |
2278 |             assetBalances[user][address(_orionToken)] += stake.amount;
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator > not compatible with types int192 and uint64
    --> sb/Exchange.sol:2295:17:
     |
2295 |         require(assetBalances[user][address(_orionToken)] > amount, "E1S");
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int192 and uint64
    --> sb/Exchange.sol:2298:9:
     |
2298 |         assetBalances[user][address(_orionToken)] -= amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator += not compatible with types int192 and uint64
    --> sb/Exchange.sol:2328:9:
     |
2328 |         assetBalances[receiver][address(_orionToken)] += amount;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int192" to "uint112".
    --> sb/Exchange.sol:2585:42:
     |
2585 |             (uint256(order.matcherFee) * uint112(totalFilled)) / order.amount
     |                                          ^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint256" to "int192".
    --> sb/Exchange.sol:2584:25:
     |
2584 |         totalFeesPaid = int192(
     |                         ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2705:32:
     |
2705 |         uint256 amountInBase = uint256(
     |                                ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:25:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                         ^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2755:42:
     |
2755 |                 ? (-1 * int(amountBase), int(amountQuote))
     |                                          ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:25:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                         ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint112" to "int256".
    --> sb/Exchange.sol:2756:43:
     |
2756 |                 : (-1 * int(amountQuote), int(amountBase));
     |                                           ^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2764:17:
     |
2764 |                 amountOut -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Operator -= not compatible with types int256 and uint64
    --> sb/Exchange.sol:2766:17:
     |
2766 |                 amountIn -= order.matcherFee;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "uint64" to "int256".
    --> sb/Exchange.sol:2771:26:
     |
2771 |                     -1 * int256(order.matcherFee)
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^

Error: Invalid type for argument in function call. Invalid implicit conversion from uint64 to int256 requested.
    --> sb/Exchange.sol:2782:17:
     |
2782 |                 order.matcherFee
     |                 ^^^^^^^^^^^^^^^^

Error: Explicit type conversion not allowed from "int112" to "uint256".
    --> sb/Exchange.sol:2797:33:
     |
2797 |             uint amountInBase = uint(
     |                                 ^ (Relevant source part starts here and spans across multiple lines).

Error: Explicit type conversion not allowed from "int256" to "uint112".
    --> sb/Exchange.sol:2832:17:
     |
2832 |                 uint112(amount),
     |                 ^^^^^^^^^^^^^^^


. Solidity failed to generate bytecode for your contract. Check if all the abstract functions are implemented. 
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1766, in worker_finalize
    finalizer(q.get_nowait())
  File "/usr/local/lib/python3.7/dist-packages/manticore/ethereum/manticore.py", line 1757, in finalizer
    if only_alive_states and last_tx.result in {"REVERT", "THROW", "TXERROR"}:
AttributeError: 'NoneType' object has no attribute 'result'
2023-05-24 17:14:06,461: [1190] m.c.manticore:INFO: Results in /mcore_qibmaw7v
2023-05-24 17:14:06,461: [1190] m.c.manticore:WARNING: Manticore failed to run

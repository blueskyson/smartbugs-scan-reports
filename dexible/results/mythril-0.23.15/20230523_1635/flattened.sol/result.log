{"error": null, "issues": [{"address": 12, "contract": "Address", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 2432, "min_gas_used": 35, "severity": "Low", "sourceMap": "81886:7684:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220deaa4794ff7e1f0afcce802fdedc92490bd7d077cecea9c99d566b865dc6c0ad64736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 12, "contract": "FeeCalculator", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 134, "min_gas_used": 39, "severity": "Low", "sourceMap": "108968:1515:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561000f575f80fd5b50610c258061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c806399ae390d1461002d575b5f80fd5b610047600480360381019061004291906106a2565b61005f565b604051610056939291906106dc565b60405180910390f35b5f805f8084602001518560400151610077919061073e565b90506100b86040518060400160405280601281526020017f457374696d617465642067617320636f73740000000000000000000000000000815250826102e1565b5f855f015173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610105573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061012991906107b5565b60ff169050610163866080015161015583600a610146919061090f565b8561037d90919063ffffffff16565b6103f490919063ffffffff16565b93506101a46040518060400160405280601881526020017f47617320706f7274696f6e20696e2066656520746f6b656e0000000000000000815250856102e1565b5f6101c087608001518860a0015161037d90919063ffffffff16565b90506102016040518060400160405280601681526020017f46656520746f6b656e20707269636520696e2055534400000000000000000000815250826102e1565b610242816102348460246102159190610959565b600a610221919061090f565b8a6060015161037d90919063ffffffff16565b6103f490919063ffffffff16565b95506102836040518060400160405280600b81526020017f44657869626c6520666565000000000000000000000000000000000000000000815250876102e1565b610296858761044b90919063ffffffff16565b93506102d76040518060400160405280600a81526020017f546f74616c206665657300000000000000000000000000000000000000000000815250856102e1565b5050509193909250565b61037982826040516024016102f7929190610a06565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506104a8565b5050565b5f80830361038d575f90506103ee565b5f828461039a919061073e565b90508284826103a99190610a61565b146103e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e090610b01565b60405180910390fd5b809150505b92915050565b5f808211610437576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042e90610b69565b60405180910390fd5b81836104439190610a61565b905092915050565b5f8082846104599190610959565b90508381101561049e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049590610bd1565b60405180910390fd5b8091505092915050565b5f815190505f6a636f6e736f6c652e6c6f679050602083015f808483855afa5050505050565b5f604051905090565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610525826104df565b810181811067ffffffffffffffff82111715610544576105436104ef565b5b80604052505050565b5f6105566104ce565b9050610562828261051c565b919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61059082610567565b9050919050565b5f6105a182610586565b9050919050565b6105b181610597565b81146105bb575f80fd5b50565b5f813590506105cc816105a8565b92915050565b5f819050919050565b6105e4816105d2565b81146105ee575f80fd5b50565b5f813590506105ff816105db565b92915050565b5f60c0828403121561061a576106196104db565b5b61062460c061054d565b90505f610633848285016105be565b5f830152506020610646848285016105f1565b602083015250604061065a848285016105f1565b604083015250606061066e848285016105f1565b6060830152506080610682848285016105f1565b60808301525060a0610696848285016105f1565b60a08301525092915050565b5f60c082840312156106b7576106b66104d7565b5b5f6106c484828501610605565b91505092915050565b6106d6816105d2565b82525050565b5f6060820190506106ef5f8301866106cd565b6106fc60208301856106cd565b61070960408301846106cd565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610748826105d2565b9150610753836105d2565b9250828202610761816105d2565b9150828204841483151761077857610777610711565b5b5092915050565b5f60ff82169050919050565b6107948161077f565b811461079e575f80fd5b50565b5f815190506107af8161078b565b92915050565b5f602082840312156107ca576107c96104d7565b5b5f6107d7848285016107a1565b91505092915050565b5f8160011c9050919050565b5f808291508390505b60018511156108355780860481111561081157610810610711565b5b60018516156108205780820291505b808102905061082e856107e0565b94506107f5565b94509492505050565b5f8261084d5760019050610908565b8161085a575f9050610908565b8160018114610870576002811461087a576108a9565b6001915050610908565b60ff84111561088c5761088b610711565b5b8360020a9150848211156108a3576108a2610711565b5b50610908565b5060208310610133831016604e8410600b84101617156108de5782820a9050838111156108d9576108d8610711565b5b610908565b6108eb84848460016107ec565b9250905081840481111561090257610901610711565b5b81810290505b9392505050565b5f610919826105d2565b9150610924836105d2565b92506109517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461083e565b905092915050565b5f610963826105d2565b915061096e836105d2565b925082820190508082111561098657610985610711565b5b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156109c35780820151818401526020810190506109a8565b5f8484015250505050565b5f6109d88261098c565b6109e28185610996565b93506109f28185602086016109a6565b6109fb816104df565b840191505092915050565b5f6040820190508181035f830152610a1e81856109ce565b9050610a2d60208301846106cd565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610a6b826105d2565b9150610a76836105d2565b925082610a8657610a85610a34565b5b828204905092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f5f8201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b5f610aeb602183610996565b9150610af682610a91565b604082019050919050565b5f6020820190508181035f830152610b1881610adf565b9050919050565b7f536166654d6174683a206469766973696f6e206279207a65726f0000000000005f82015250565b5f610b53601a83610996565b9150610b5e82610b1f565b602082019050919050565b5f6020820190508181035f830152610b8081610b47565b9050919050565b7f536166654d6174683a206164646974696f6e206f766572666c6f7700000000005f82015250565b5f610bbb601b83610996565b9150610bc682610b87565b602082019050919050565b5f6020820190508181035f830152610be881610baf565b905091905056fea264697066735822122021ea49db610cfb43268732fc21d2feb269d589018b40ffcb65ab6082db0cb67064736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}}, {"address": 12, "contract": "LibStorage", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 2432, "min_gas_used": 35, "severity": "Low", "sourceMap": "4995:1000:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220720d9d19425fa0b335ac09d11bf134b884ed6c272897f7f9cead3f75256f73a364736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 12, "contract": "ProxyAdmin", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 134, "min_gas_used": 39, "severity": "Low", "sourceMap": "98786:2375:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561000f575f80fd5b505f61001f6100c060201b60201c565b9050805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100c7565b5f33905090565b610ec0806100d45f395ff3fe60806040526004361061007a575f3560e01c80639623609d1161004d5780639623609d1461012257806399a88ec41461013e578063f2fde38b14610166578063f3b7dead1461018e5761007a565b8063204e1c7a1461007e578063715018a6146100ba5780637eff275e146100d05780638da5cb5b146100f8575b5f80fd5b348015610089575f80fd5b506100a4600480360381019061009f9190610922565b6101ca565b6040516100b1919061096d565b60405180910390f35b3480156100c5575f80fd5b506100ce610258565b005b3480156100db575f80fd5b506100f660048036038101906100f191906109b0565b61038e565b005b348015610103575f80fd5b5061010c610474565b604051610119919061096d565b60405180910390f35b61013c60048036038101906101379190610b2a565b61049b565b005b348015610149575f80fd5b50610164600480360381019061015f91906109b0565b610586565b005b348015610171575f80fd5b5061018c60048036038101906101879190610b96565b61066c565b005b348015610199575f80fd5b506101b460048036038101906101af9190610922565b610811565b6040516101c1919061096d565b60405180910390f35b5f805f8373ffffffffffffffffffffffffffffffffffffffff166040516101f090610c15565b5f60405180830381855afa9150503d805f8114610228576040519150601f19603f3d011682016040523d82523d5f602084013e61022d565b606091505b50915091508161023b575f80fd5b8080602001905181019061024f9190610c53565b92505050919050565b61026061089f565b73ffffffffffffffffffffffffffffffffffffffff1661027e610474565b73ffffffffffffffffffffffffffffffffffffffff16146102d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cb90610cd8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61039661089f565b73ffffffffffffffffffffffffffffffffffffffff166103b4610474565b73ffffffffffffffffffffffffffffffffffffffff161461040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040190610cd8565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16638f283970826040518263ffffffff1660e01b8152600401610443919061096d565b5f604051808303815f87803b15801561045a575f80fd5b505af115801561046c573d5f803e3d5ffd5b505050505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104a361089f565b73ffffffffffffffffffffffffffffffffffffffff166104c1610474565b73ffffffffffffffffffffffffffffffffffffffff1614610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050e90610cd8565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff16634f1ef2863484846040518463ffffffff1660e01b8152600401610553929190610d70565b5f604051808303818588803b15801561056a575f80fd5b505af115801561057c573d5f803e3d5ffd5b5050505050505050565b61058e61089f565b73ffffffffffffffffffffffffffffffffffffffff166105ac610474565b73ffffffffffffffffffffffffffffffffffffffff1614610602576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f990610cd8565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16633659cfe6826040518263ffffffff1660e01b815260040161063b919061096d565b5f604051808303815f87803b158015610652575f80fd5b505af1158015610664573d5f803e3d5ffd5b505050505050565b61067461089f565b73ffffffffffffffffffffffffffffffffffffffff16610692610474565b73ffffffffffffffffffffffffffffffffffffffff16146106e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106df90610cd8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610756576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074d90610e0e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1660405161083790610e76565b5f60405180830381855afa9150503d805f811461086f576040519150601f19603f3d011682016040523d82523d5f602084013e610874565b606091505b509150915081610882575f80fd5b808060200190518101906108969190610c53565b92505050919050565b5f33905090565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108e0826108b7565b9050919050565b5f6108f1826108d6565b9050919050565b610901816108e7565b811461090b575f80fd5b50565b5f8135905061091c816108f8565b92915050565b5f60208284031215610937576109366108af565b5b5f6109448482850161090e565b91505092915050565b5f610957826108b7565b9050919050565b6109678161094d565b82525050565b5f6020820190506109805f83018461095e565b92915050565b61098f8161094d565b8114610999575f80fd5b50565b5f813590506109aa81610986565b92915050565b5f80604083850312156109c6576109c56108af565b5b5f6109d38582860161090e565b92505060206109e48582860161099c565b9150509250929050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610a3c826109f6565b810181811067ffffffffffffffff82111715610a5b57610a5a610a06565b5b80604052505050565b5f610a6d6108a6565b9050610a798282610a33565b919050565b5f67ffffffffffffffff821115610a9857610a97610a06565b5b610aa1826109f6565b9050602081019050919050565b828183375f83830152505050565b5f610ace610ac984610a7e565b610a64565b905082815260208101848484011115610aea57610ae96109f2565b5b610af5848285610aae565b509392505050565b5f82601f830112610b1157610b106109ee565b5b8135610b21848260208601610abc565b91505092915050565b5f805f60608486031215610b4157610b406108af565b5b5f610b4e8682870161090e565b9350506020610b5f8682870161099c565b925050604084013567ffffffffffffffff811115610b8057610b7f6108b3565b5b610b8c86828701610afd565b9150509250925092565b5f60208284031215610bab57610baa6108af565b5b5f610bb88482850161099c565b91505092915050565b5f81905092915050565b7f5c60da1b000000000000000000000000000000000000000000000000000000005f82015250565b5f610bff600483610bc1565b9150610c0a82610bcb565b600482019050919050565b5f610c1f82610bf3565b9150819050919050565b610c32816108d6565b8114610c3c575f80fd5b50565b5f81519050610c4d81610c29565b92915050565b5f60208284031215610c6857610c676108af565b5b5f610c7584828501610c3f565b91505092915050565b5f82825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f610cc2602083610c7e565b9150610ccd82610c8e565b602082019050919050565b5f6020820190508181035f830152610cef81610cb6565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610d2d578082015181840152602081019050610d12565b5f8484015250505050565b5f610d4282610cf6565b610d4c8185610d00565b9350610d5c818560208601610d10565b610d65816109f6565b840191505092915050565b5f604082019050610d835f83018561095e565b8181036020830152610d958184610d38565b90509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f610df8602683610c7e565b9150610e0382610d9e565b604082019050919050565b5f6020820190508181035f830152610e2581610dec565b9050919050565b7ff851a440000000000000000000000000000000000000000000000000000000005f82015250565b5f610e60600483610bc1565b9150610e6b82610e2c565b600482019050919050565b5f610e8082610e54565b915081905091905056fea2646970667358221220362aaf190e68fa8c4075c33c8e9057139601687f20fbc2e65b2ebeeadd19ca8664736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}}, {"address": 12, "contract": "SafeERC20", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 2432, "min_gas_used": 35, "severity": "Low", "sourceMap": "112256:3104:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122046430bdee8a884268942ba662340f2933e6dce04d9a1676efa93068264dcf5c764736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 12, "contract": "SafeMath", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 2432, "min_gas_used": 35, "severity": "Low", "sourceMap": "101934:6594:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f30541613d6e2aaf79f90131a6b1614da311c93d16090a1b3769cc35cd55e17e64736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 12, "contract": "Settlement", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 134, "min_gas_used": 39, "severity": "Low", "sourceMap": "118187:14849:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}}, {"address": 12, "contract": "SettlementAdmin", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 134, "min_gas_used": 39, "severity": "Low", "sourceMap": "101215:47:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561000f575f80fd5b505f61001f6100c060201b60201c565b9050805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100c7565b5f33905090565b610ec0806100d45f395ff3fe60806040526004361061007a575f3560e01c80639623609d1161004d5780639623609d1461012257806399a88ec41461013e578063f2fde38b14610166578063f3b7dead1461018e5761007a565b8063204e1c7a1461007e578063715018a6146100ba5780637eff275e146100d05780638da5cb5b146100f8575b5f80fd5b348015610089575f80fd5b506100a4600480360381019061009f9190610922565b6101ca565b6040516100b1919061096d565b60405180910390f35b3480156100c5575f80fd5b506100ce610258565b005b3480156100db575f80fd5b506100f660048036038101906100f191906109b0565b61038e565b005b348015610103575f80fd5b5061010c610474565b604051610119919061096d565b60405180910390f35b61013c60048036038101906101379190610b2a565b61049b565b005b348015610149575f80fd5b50610164600480360381019061015f91906109b0565b610586565b005b348015610171575f80fd5b5061018c60048036038101906101879190610b96565b61066c565b005b348015610199575f80fd5b506101b460048036038101906101af9190610922565b610811565b6040516101c1919061096d565b60405180910390f35b5f805f8373ffffffffffffffffffffffffffffffffffffffff166040516101f090610c15565b5f60405180830381855afa9150503d805f8114610228576040519150601f19603f3d011682016040523d82523d5f602084013e61022d565b606091505b50915091508161023b575f80fd5b8080602001905181019061024f9190610c53565b92505050919050565b61026061089f565b73ffffffffffffffffffffffffffffffffffffffff1661027e610474565b73ffffffffffffffffffffffffffffffffffffffff16146102d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cb90610cd8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61039661089f565b73ffffffffffffffffffffffffffffffffffffffff166103b4610474565b73ffffffffffffffffffffffffffffffffffffffff161461040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040190610cd8565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16638f283970826040518263ffffffff1660e01b8152600401610443919061096d565b5f604051808303815f87803b15801561045a575f80fd5b505af115801561046c573d5f803e3d5ffd5b505050505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104a361089f565b73ffffffffffffffffffffffffffffffffffffffff166104c1610474565b73ffffffffffffffffffffffffffffffffffffffff1614610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050e90610cd8565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff16634f1ef2863484846040518463ffffffff1660e01b8152600401610553929190610d70565b5f604051808303818588803b15801561056a575f80fd5b505af115801561057c573d5f803e3d5ffd5b5050505050505050565b61058e61089f565b73ffffffffffffffffffffffffffffffffffffffff166105ac610474565b73ffffffffffffffffffffffffffffffffffffffff1614610602576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f990610cd8565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16633659cfe6826040518263ffffffff1660e01b815260040161063b919061096d565b5f604051808303815f87803b158015610652575f80fd5b505af1158015610664573d5f803e3d5ffd5b505050505050565b61067461089f565b73ffffffffffffffffffffffffffffffffffffffff16610692610474565b73ffffffffffffffffffffffffffffffffffffffff16146106e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106df90610cd8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610756576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074d90610e0e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1660405161083790610e76565b5f60405180830381855afa9150503d805f811461086f576040519150601f19603f3d011682016040523d82523d5f602084013e610874565b606091505b509150915081610882575f80fd5b808060200190518101906108969190610c53565b92505050919050565b5f33905090565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108e0826108b7565b9050919050565b5f6108f1826108d6565b9050919050565b610901816108e7565b811461090b575f80fd5b50565b5f8135905061091c816108f8565b92915050565b5f60208284031215610937576109366108af565b5b5f6109448482850161090e565b91505092915050565b5f610957826108b7565b9050919050565b6109678161094d565b82525050565b5f6020820190506109805f83018461095e565b92915050565b61098f8161094d565b8114610999575f80fd5b50565b5f813590506109aa81610986565b92915050565b5f80604083850312156109c6576109c56108af565b5b5f6109d38582860161090e565b92505060206109e48582860161099c565b9150509250929050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610a3c826109f6565b810181811067ffffffffffffffff82111715610a5b57610a5a610a06565b5b80604052505050565b5f610a6d6108a6565b9050610a798282610a33565b919050565b5f67ffffffffffffffff821115610a9857610a97610a06565b5b610aa1826109f6565b9050602081019050919050565b828183375f83830152505050565b5f610ace610ac984610a7e565b610a64565b905082815260208101848484011115610aea57610ae96109f2565b5b610af5848285610aae565b509392505050565b5f82601f830112610b1157610b106109ee565b5b8135610b21848260208601610abc565b91505092915050565b5f805f60608486031215610b4157610b406108af565b5b5f610b4e8682870161090e565b9350506020610b5f8682870161099c565b925050604084013567ffffffffffffffff811115610b8057610b7f6108b3565b5b610b8c86828701610afd565b9150509250925092565b5f60208284031215610bab57610baa6108af565b5b5f610bb88482850161099c565b91505092915050565b5f81905092915050565b7f5c60da1b000000000000000000000000000000000000000000000000000000005f82015250565b5f610bff600483610bc1565b9150610c0a82610bcb565b600482019050919050565b5f610c1f82610bf3565b9150819050919050565b610c32816108d6565b8114610c3c575f80fd5b50565b5f81519050610c4d81610c29565b92915050565b5f60208284031215610c6857610c676108af565b5b5f610c7584828501610c3f565b91505092915050565b5f82825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f610cc2602083610c7e565b9150610ccd82610c8e565b602082019050919050565b5f6020820190508181035f830152610cef81610cb6565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610d2d578082015181840152602081019050610d12565b5f8484015250505050565b5f610d4282610cf6565b610d4c8185610d00565b9350610d5c818560208601610d10565b610d65816109f6565b840191505092915050565b5f604082019050610d835f83018561095e565b8181036020830152610d958184610d38565b90509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f610df8602683610c7e565b9150610e0382610d9e565b604082019050919050565b5f6020820190508181035f830152610e2581610dec565b9050919050565b7ff851a440000000000000000000000000000000000000000000000000000000005f82015250565b5f610e60600483610bc1565b9150610e6b82610e2c565b600482019050919050565b5f610e8082610e54565b915081905091905056fea26469706673582212200d955a902f6d22d6818fc5e5e0c1da10f637b70a8961b7a37b9a9af6ddf35e7b64736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}}, {"address": 12, "contract": "Types", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 2432, "min_gas_used": 35, "severity": "Low", "sourceMap": "2887:1557:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220191cf82c054fd4d2db93ba887c96ca2d424acacfecb5ac8ad60b0ff6037618ce64736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 12, "contract": "ZrxRouter", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 134, "min_gas_used": 39, "severity": "Low", "sourceMap": "115484:2666:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561000f575f80fd5b506122608061001d5f395ff3fe608060405260043610610094575f3560e01c806391d148541161005857806391d1485414610170578063c13da018146101ac578063d547741f146101d4578063e63ab1e9146101fc578063e959b38a146102265761009b565b8063044218231461009f57806327054df6146100c957806334c57920146100f357806375b238fc146101305780638129fc1c1461015a5761009b565b3661009b57005b5f80fd5b3480156100aa575f80fd5b506100b361024e565b6040516100c091906115e3565b60405180910390f35b3480156100d4575f80fd5b506100dd610274565b6040516100ea91906115e3565b60405180910390f35b3480156100fe575f80fd5b5061011960048036038101906101149190611691565b61029a565b604051610127929190611794565b60405180910390f35b34801561013b575f80fd5b50610144610a55565b60405161015191906115e3565b60405180910390f35b348015610165575f80fd5b5061016e610a7b565b005b34801561017b575f80fd5b5061019660048036038101906101919190611846565b610b6f565b6040516101a39190611884565b60405180910390f35b3480156101b7575f80fd5b506101d260048036038101906101cd919061189d565b610bfb565b005b3480156101df575f80fd5b506101fa60048036038101906101f59190611846565b610cc9565b005b348015610207575f80fd5b50610210610d5b565b60405161021d91906115e3565b60405180910390f35b348015610231575f80fd5b5061024c60048036038101906102479190611846565b610d81565b005b7f077a1d526a4ce8a773632ab13b4fbbf1fcc954c3dab26cd27ea0e2a6750da5d75f1b81565b7fd95061bdf0c43d77b6cbe1c15072292976244ec8d5012de75baa36e42da4625e5f1b81565b5f60605f805f86868101906102af9190611a3e565b9250925092506102d660405180606001604052806027815260200161220460279139610e01565b6103156040518060400160405280601481526020017f476f696e6720746f20737761702074617267657400000000000000000000000081525084610e9a565b6103546040518060400160405280601781526020017f417070726f76696e6720616c6c6f77616e636520666f7200000000000000000081525083610e9a565b6103b86040518060400160405280601581526020017f5377617070696e6720696e70757420616d6f756e7400000000000000000000008152508960a00160200160208101906103a39190611aed565b6dffffffffffffffffffffffffffff16610f36565b5f8860e0015f0160208101906103ce9190611b53565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104069190611b8d565b602060405180830381865afa158015610421573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104459190611bd9565b90506104866040518060400160405280601a81526020017f42616c616e6365206f66206f757470757420746f6b656e20623400000000000081525082610f36565b8860a0015f01602081019061049b9190611b53565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3845f6040518363ffffffff1660e01b81526004016104d5929190611c46565b6020604051808303815f875af11580156104f1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105159190611c97565b61051d575f80fd5b8860a0015f0160208101906105329190611b53565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3848b60a00160200160208101906105649190611aed565b6040518363ffffffff1660e01b8152600401610581929190611cf2565b6020604051808303815f875af115801561059d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c19190611c97565b6105c9575f80fd5b6106086040518060400160405280601581526020017f5377617070696e672077697468206761736c65667400000000000000000000008152505a610f36565b5f8473ffffffffffffffffffffffffffffffffffffffff165a8460405161062f9190611d5d565b5f604051808303815f8787f1925050503d805f8114610669576040519150601f19603f3d011682016040523d82523d5f602084013e61066e565b606091505b505090506106b16040518060400160405280600e81526020017f47617320616674657220737761700000000000000000000000000000000000008152505a610f36565b80610777576106f46040518060400160405280600e81526020017f4661696c656420746f2073776170000000000000000000000000000000000000815250610e01565b6107326040518060400160405280601881526020017f2d2d2d2d20454e44205a525820524f55544552202d2d2d2d0000000000000000815250610e01565b5f6040518060400160405280601081526020017f535741505f43414c4c5f4641494c454400000000000000000000000000000000815250965096505050505050610a4d565b5f8a60e0015f01602081019061078d9190611b53565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107c59190611b8d565b602060405180830381865afa1580156107e0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108049190611bd9565b90506108456040518060400160405280600d81526020017f42616c616e63652061667465720000000000000000000000000000000000000081525082610f36565b5f6108598483610fd290919063ffffffff16565b905061089a6040518060400160405280601081526020017f42616c616e63652072656365697665640000000000000000000000000000000081525082610f36565b6108fe6040518060400160405280600c81526020017f4d696e20726571756972656400000000000000000000000000000000000000008152508d60e00160200160208101906108e99190611aed565b6dffffffffffffffffffffffffffff16610f36565b8b60e00160200160208101906109149190611aed565b6dffffffffffffffffffffffffffff16811015610966576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095d90611dbd565b60405180910390fd5b6109ac61097161102a565b828e60e0015f0160208101906109879190611b53565b73ffffffffffffffffffffffffffffffffffffffff166110319092919063ffffffff16565b6109f26040518060400160405280601581526020017f5472616e7366657272656420726573756c7420746f00000000000000000000008152506109ed61102a565b610e9a565b610a306040518060400160405280601881526020017f2d2d2d2d20454e44205a525820524f55544552202d2d2d2d0000000000000000815250610e01565b600160405180602001604052805f81525098509850505050505050505b935093915050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217755f1b81565b5f610a846110b7565b9050805f0160019054906101000a900460ff1680610aaf5750805f015f9054906101000a900460ff16155b610aee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae590611e25565b60405180910390fd5b5f815f0160019054906101000a900460ff161590508015610b41576001825f0160016101000a81548160ff0219169083151502179055506001825f015f6101000a81548160ff0219169083151502179055505b610b496110de565b8015610b6b575f825f0160016101000a81548160ff0219169083151502179055505b5050565b5f610b7861122e565b73aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa63f40931b0909185856040518463ffffffff1660e01b8152600401610bb493929190611e68565b602060405180830381865af4158015610bcf573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bf39190611c97565b905092915050565b610c2e7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217755f1b610c2961102a565b610b6f565b610c6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6490611ee7565b60405180910390fd5b610c997f077a1d526a4ce8a773632ab13b4fbbf1fcc954c3dab26cd27ea0e2a6750da5d75f1b83610cc9565b610cc57f077a1d526a4ce8a773632ab13b4fbbf1fcc954c3dab26cd27ea0e2a6750da5d75f1b82610d81565b5050565b610cfc7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217755f1b610cf761102a565b610b6f565b610d3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3290611ee7565b60405180910390fd5b610d578282610d4861122e565b6112559092919063ffffffff16565b5050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a5f1b81565b610db47fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217755f1b610daf61102a565b610b6f565b610df3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dea90611ee7565b60405180910390fd5b610dfd82826112b7565b5050565b610e9781604051602401610e159190611f05565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112d7565b50565b610f328282604051602401610eb0929190611f25565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112d7565b5050565b610fce8282604051602401610f4c929190611f62565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112d7565b5050565b5f82821115611016576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100d90611fda565b60405180910390fd5b81836110229190612025565b905092915050565b5f33905090565b6110b28363a9059cbb60e01b8484604051602401611050929190612058565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112fd565b505050565b5f7fd59dd79cfd4373c6c6547848d91fc2ea67c8aec9053f7028828216c5af1d4741905090565b5f6110e76110b7565b9050805f0160019054906101000a900460ff16806111125750805f015f9054906101000a900460ff16155b611151576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114890611e25565b60405180910390fd5b5f815f0160019054906101000a900460ff1615905080156111a4576001825f0160016101000a81548160ff0219169083151502179055506001825f015f6101000a81548160ff0219169083151502179055505b5f6111ad61102a565b90506111db7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217755f1b826112b7565b6112077f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a5f1b826112b7565b50801561122a575f825f0160016101000a81548160ff0219169083151502179055505b5050565b5f7f3a83b1278d351a40f18bb9e8e77896e8c1dc812ffaed5ea63e0e837a6dae57e9905090565b826001015f8381526020019081526020015f205f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81549060ff0219169055505050565b6112d382826112c461122e565b6113c29092919063ffffffff16565b5050565b5f815190505f6a636f6e736f6c652e6c6f679050602083015f808483855afa5050505050565b5f61135e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661142d9092919063ffffffff16565b90505f815111156113bd578080602001905181019061137d9190611c97565b6113bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b3906120ef565b60405180910390fd5b5b505050565b6001836001015f8481526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550505050565b606061143b84845f85611444565b90509392505050565b606082471015611489576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114809061217d565b60405180910390fd5b61149285611554565b6114d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c8906121e5565b60405180910390fd5b5f808673ffffffffffffffffffffffffffffffffffffffff1685876040516114f99190611d5d565b5f6040518083038185875af1925050503d805f8114611533576040519150601f19603f3d011682016040523d82523d5f602084013e611538565b606091505b5091509150611548828286611565565b92505050949350505050565b5f80823b90505f8111915050919050565b60608315611575578290506115c4565b5f835111156115875782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115bb9190611f05565b60405180910390fd5b9392505050565b5f819050919050565b6115dd816115cb565b82525050565b5f6020820190506115f65f8301846115d4565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f61012082840312156116275761162661160d565b5b81905092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261165157611650611630565b5b8235905067ffffffffffffffff81111561166e5761166d611634565b5b60208301915083600182028301111561168a57611689611638565b5b9250929050565b5f805f61014084860312156116a9576116a8611605565b5b5f6116b686828701611611565b93505061012084013567ffffffffffffffff8111156116d8576116d7611609565b5b6116e48682870161163c565b92509250509250925092565b5f8115159050919050565b611704816116f0565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611741578082015181840152602081019050611726565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6117668261170a565b6117708185611714565b9350611780818560208601611724565b6117898161174c565b840191505092915050565b5f6040820190506117a75f8301856116fb565b81810360208301526117b9818461175c565b90509392505050565b6117cb816115cb565b81146117d5575f80fd5b50565b5f813590506117e6816117c2565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611815826117ec565b9050919050565b6118258161180b565b811461182f575f80fd5b50565b5f813590506118408161181c565b92915050565b5f806040838503121561185c5761185b611605565b5b5f611869858286016117d8565b925050602061187a85828601611832565b9150509250929050565b5f6020820190506118975f8301846116fb565b92915050565b5f80604083850312156118b3576118b2611605565b5b5f6118c085828601611832565b92505060206118d185828601611832565b9150509250929050565b5f6118e5826117ec565b9050919050565b6118f5816118db565b81146118ff575f80fd5b50565b5f81359050611910816118ec565b92915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6119508261174c565b810181811067ffffffffffffffff8211171561196f5761196e61191a565b5b80604052505050565b5f6119816115fc565b905061198d8282611947565b919050565b5f67ffffffffffffffff8211156119ac576119ab61191a565b5b6119b58261174c565b9050602081019050919050565b828183375f83830152505050565b5f6119e26119dd84611992565b611978565b9050828152602081018484840111156119fe576119fd611916565b5b611a098482856119c2565b509392505050565b5f82601f830112611a2557611a24611630565b5b8135611a358482602086016119d0565b91505092915050565b5f805f60608486031215611a5557611a54611605565b5b5f611a6286828701611902565b9350506020611a7386828701611902565b925050604084013567ffffffffffffffff811115611a9457611a93611609565b5b611aa086828701611a11565b9150509250925092565b5f6dffffffffffffffffffffffffffff82169050919050565b611acc81611aaa565b8114611ad6575f80fd5b50565b5f81359050611ae781611ac3565b92915050565b5f60208284031215611b0257611b01611605565b5b5f611b0f84828501611ad9565b91505092915050565b5f611b228261180b565b9050919050565b611b3281611b18565b8114611b3c575f80fd5b50565b5f81359050611b4d81611b29565b92915050565b5f60208284031215611b6857611b67611605565b5b5f611b7584828501611b3f565b91505092915050565b611b878161180b565b82525050565b5f602082019050611ba05f830184611b7e565b92915050565b5f819050919050565b611bb881611ba6565b8114611bc2575f80fd5b50565b5f81519050611bd381611baf565b92915050565b5f60208284031215611bee57611bed611605565b5b5f611bfb84828501611bc5565b91505092915050565b5f819050919050565b5f819050919050565b5f611c30611c2b611c2684611c04565b611c0d565b611ba6565b9050919050565b611c4081611c16565b82525050565b5f604082019050611c595f830185611b7e565b611c666020830184611c37565b9392505050565b611c76816116f0565b8114611c80575f80fd5b50565b5f81519050611c9181611c6d565b92915050565b5f60208284031215611cac57611cab611605565b5b5f611cb984828501611c83565b91505092915050565b5f611cdc611cd7611cd284611aaa565b611c0d565b611ba6565b9050919050565b611cec81611cc2565b82525050565b5f604082019050611d055f830185611b7e565b611d126020830184611ce3565b9392505050565b5f81519050919050565b5f81905092915050565b5f611d3782611d19565b611d418185611d23565b9350611d51818560208601611724565b80840191505092915050565b5f611d688284611d2d565b915081905092915050565b7f496e73756666696369656e74206f757470757420616d6f756e740000000000005f82015250565b5f611da7601a83611714565b9150611db282611d73565b602082019050919050565b5f6020820190508181035f830152611dd481611d9b565b9050919050565b7f416c726561647920696e697469616c697a6564000000000000000000000000005f82015250565b5f611e0f601383611714565b9150611e1a82611ddb565b602082019050919050565b5f6020820190508181035f830152611e3c81611e03565b9050919050565b8082525050565b611e53816115cb565b82525050565b611e628161180b565b82525050565b5f606082019050611e7b5f830186611e43565b611e886020830185611e4a565b611e956040830184611e59565b949350505050565b7f4e6f742061646d696e00000000000000000000000000000000000000000000005f82015250565b5f611ed1600983611714565b9150611edc82611e9d565b602082019050919050565b5f6020820190508181035f830152611efe81611ec5565b9050919050565b5f6020820190508181035f830152611f1d818461175c565b905092915050565b5f6040820190508181035f830152611f3d818561175c565b9050611f4c6020830184611b7e565b9392505050565b611f5c81611ba6565b82525050565b5f6040820190508181035f830152611f7a818561175c565b9050611f896020830184611f53565b9392505050565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f7700005f82015250565b5f611fc4601e83611714565b9150611fcf82611f90565b602082019050919050565b5f6020820190508181035f830152611ff181611fb8565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61202f82611ba6565b915061203a83611ba6565b925082820390508181111561205257612051611ff8565b5b92915050565b5f60408201905061206b5f830185611b7e565b6120786020830184611f53565b9392505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b5f6120d9602a83611714565b91506120e48261207f565b604082019050919050565b5f6020820190508181035f830152612106816120cd565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b5f612167602683611714565b91506121728261210d565b604082019050919050565b5f6020820190508181035f8301526121948161215b565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f6121cf601d83611714565b91506121da8261219b565b602082019050919050565b5f6020820190508181035f8301526121fc816121c3565b905091905056fe2d2d2d2d2d2d2d2d2d2d2d2d2d205a525820524f55544552202d2d2d2d2d2d2d2d2d2d2d2d2d2da2646970667358221220834a12737fcc020488950d509a40eb7503ba398e3fba01921b181c618e40fc0b64736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}}, {"address": 12, "contract": "console", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 2432, "min_gas_used": 35, "severity": "Low", "sourceMap": "6035:61980:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206c55bcb67e2c18b6cbc99de2cb12d65334388b6efcab0d84a9756c8c3307608d64736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 14, "contract": "LibAccess", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 2480, "min_gas_used": 83, "severity": "Low", "sourceMap": "4486:466:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x61024a61004e600b8282823980515f1a607314610042577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610034575f3560e01c8063f40931b014610038575b5f80fd5b610052600480360381019061004d9190610191565b610068565b60405161005f91906101fb565b60405180910390f35b5f836001015f8481526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1690509392505050565b5f80fd5b5f819050919050565b6100e3816100d1565b81146100ed575f80fd5b50565b5f813590506100fe816100da565b92915050565b5f819050919050565b61011681610104565b8114610120575f80fd5b50565b5f813590506101318161010d565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61016082610137565b9050919050565b61017081610156565b811461017a575f80fd5b50565b5f8135905061018b81610167565b92915050565b5f805f606084860312156101a8576101a76100cd565b5b5f6101b5868287016100f0565b93505060206101c686828701610123565b92505060406101d78682870161017d565b9150509250925092565b5f8115159050919050565b6101f5816101e1565b82525050565b5f60208201905061020e5f8301846101ec565b9291505056fea26469706673582212207b79e9d637b7faa52747c0b1b60afba5640ec55e1a252343533fda0603d4a1bf64736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 14, "contract": "LibConfig", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values). This issue is reported for internal compiler generated code.", "function": "constructor", "max_gas_used": 2739, "min_gas_used": 342, "severity": "Low", "sourceMap": "70948:1839:0:-:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x610c4c61004e600b8282823980515f1a607314610042577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100a7575f3560e01c806379df73751161006f57806379df7375146101835780638fe20a7b146101b3578063bd87145b146101db578063c2ab03e114610203578063e40a1aea14610233576100a7565b80631d24da6c146100ab57806321cab0c7146100d35780633ed940e6146100fb57806358e62d581461012b5780636d73f0db14610153575b5f80fd5b8180156100b6575f80fd5b506100d160048036038101906100cc91906107d9565b610263565b005b8180156100de575f80fd5b506100f960048036038101906100f491906109a8565b6102a2565b005b610115600480360381019061011091906109e6565b610417565b6040516101229190610a20565b60405180910390f35b818015610136575f80fd5b50610151600480360381019061014c9190610a39565b610440565b005b61016d600480360381019061016891906109e6565b610460565b60405161017a9190610af7565b60405180910390f35b61019d600480360381019061019891906109e6565b610604565b6040516101aa9190610a20565b60405180910390f35b8180156101be575f80fd5b506101d960048036038101906101d49190610b10565b61062c565b005b8180156101e6575f80fd5b5061020160048036038101906101fc91906107d9565b610671565b005b61021d600480360381019061021891906109e6565b6106af565b60405161022a9190610b5d565b60405180910390f35b61024d600480360381019061024891906109e6565b6106c8565b60405161025a9190610b85565b60405180910390f35b808260010160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505050565b805f0151825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060200151826001015f6101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555080604001518260010160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055508060600151826002015f6101000a81548160ff021916908360ff1602179055505f73ffffffffffffffffffffffffffffffffffffffff16825f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040a90610bf8565b60405180910390fd5b5050565b5f8160010160109054906101000a90046fffffffffffffffffffffffffffffffff169050919050565b80826002015f6101000a81548160ff021916908360ff1602179055505050565b6104686106f3565b6104706106f3565b825f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815f019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050826001015f9054906101000a90046fffffffffffffffffffffffffffffffff1681602001906fffffffffffffffffffffffffffffffff1690816fffffffffffffffffffffffffffffffff16815250508260010160109054906101000a90046fffffffffffffffffffffffffffffffff1681604001906fffffffffffffffffffffffffffffffff1690816fffffffffffffffffffffffffffffffff1681525050826002015f9054906101000a900460ff16816060019060ff16908160ff16815250505f73ffffffffffffffffffffffffffffffffffffffff16815f015173ffffffffffffffffffffffffffffffffffffffff16036105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f290610bf8565b60405180910390fd5b80915050919050565b5f816001015f9054906101000a90046fffffffffffffffffffffffffffffffff169050919050565b80825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b80826001015f6101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505050565b5f816002015f9054906101000a900460ff169050919050565b5f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60405180608001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f6fffffffffffffffffffffffffffffffff1681526020015f6fffffffffffffffffffffffffffffffff1681526020015f60ff1681525090565b5f604051905090565b5f80fd5b5f819050919050565b61077381610761565b811461077d575f80fd5b50565b5f8135905061078e8161076a565b92915050565b5f6fffffffffffffffffffffffffffffffff82169050919050565b6107b881610794565b81146107c2575f80fd5b50565b5f813590506107d3816107af565b92915050565b5f80604083850312156107ef576107ee61075d565b5b5f6107fc85828601610780565b925050602061080d858286016107c5565b9150509250929050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6108618261081b565b810181811067ffffffffffffffff821117156108805761087f61082b565b5b80604052505050565b5f610892610754565b905061089e8282610858565b919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108cc826108a3565b9050919050565b6108dc816108c2565b81146108e6575f80fd5b50565b5f813590506108f7816108d3565b92915050565b5f60ff82169050919050565b610912816108fd565b811461091c575f80fd5b50565b5f8135905061092d81610909565b92915050565b5f6080828403121561094857610947610817565b5b6109526080610889565b90505f610961848285016108e9565b5f830152506020610974848285016107c5565b6020830152506040610988848285016107c5565b604083015250606061099c8482850161091f565b60608301525092915050565b5f8060a083850312156109be576109bd61075d565b5b5f6109cb85828601610780565b92505060206109dc85828601610933565b9150509250929050565b5f602082840312156109fb576109fa61075d565b5b5f610a0884828501610780565b91505092915050565b610a1a81610794565b82525050565b5f602082019050610a335f830184610a11565b92915050565b5f8060408385031215610a4f57610a4e61075d565b5b5f610a5c85828601610780565b9250506020610a6d8582860161091f565b9150509250929050565b610a80816108c2565b82525050565b610a8f81610794565b82525050565b610a9e816108fd565b82525050565b608082015f820151610ab85f850182610a77565b506020820151610acb6020850182610a86565b506040820151610ade6040850182610a86565b506060820151610af16060850182610a95565b50505050565b5f608082019050610b0a5f830184610aa4565b92915050565b5f8060408385031215610b2657610b2561075d565b5b5f610b3385828601610780565b9250506020610b44858286016108e9565b9150509250929050565b610b57816108fd565b82525050565b5f602082019050610b705f830184610b4e565b92915050565b610b7f816108c2565b82525050565b5f602082019050610b985f830184610b76565b92915050565b5f82825260208201905092915050565b7f496e76616c696420646576207465616d206164647265737300000000000000005f82015250565b5f610be2601883610b9e565b9150610bed82610bae565b602082019050919050565b5f6020820190508181035f830152610c0f81610bd6565b905091905056fea26469706673582212202ea965244674f4e326d90946ca3e3ff72522150802555f4c23d68204aff2a5c564736f6c63430008140033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 1140, "code": "constructor(address _logic, bytes memory _data) public payable {\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\n        _setImplementation(_logic);\n        if(_data.length > 0) {\n            Address.functionDelegateCall(_logic, _data);\n        }\n    }", "contract": "UpgradeableProxy", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "/sb/flattened.sol", "function": "constructor", "lineno": 2385, "max_gas_used": 2726, "min_gas_used": 139, "severity": "Medium", "sourceMap": ":::i", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1000000000001", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "input": "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}], "success": true}
